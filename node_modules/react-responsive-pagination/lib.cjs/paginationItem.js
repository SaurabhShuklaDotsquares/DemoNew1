"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.compositionToPaginationItems = void 0;
function compositionToPaginationItems(compositionItems, options) {
    var _a;
    var activeLabel = (_a = options === null || options === void 0 ? void 0 : options.a11yActiveLabel) !== null && _a !== void 0 ? _a : '(current)';
    var previousLabel = (options === null || options === void 0 ? void 0 : options.previousLabel) || '«';
    var a11yPreviousLabel = (options === null || options === void 0 ? void 0 : options.ariaPreviousLabel) || 'Previous';
    var nextLabel = (options === null || options === void 0 ? void 0 : options.nextLabel) || '»';
    var a11yNextLabel = (options === null || options === void 0 ? void 0 : options.ariaNextLabel) || 'Next';
    return compositionItems.map(function (_a) {
        var type = _a.type, page = _a.page;
        switch (type) {
            case '<':
                return {
                    type: 'previous',
                    key: "previous".concat(page === undefined ? '_disabled' : ''),
                    label: previousLabel,
                    a11yLabel: previousLabel === a11yPreviousLabel
                        ? undefined
                        : { label: a11yPreviousLabel, mode: 'replace' },
                    gotoPage: page,
                };
            case '>':
                return {
                    type: 'next',
                    key: "next".concat(page === undefined ? '_disabled' : ''),
                    label: nextLabel,
                    a11yLabel: nextLabel === a11yNextLabel
                        ? undefined
                        : { label: a11yNextLabel, mode: 'replace' },
                    gotoPage: page,
                };
            case '…L':
            case '…R':
                return {
                    type: 'ellipsis',
                    key: "ellipsis_".concat(type === '…L' ? 'l' : 'r'),
                    label: '…',
                    a11yHidden: true,
                    gotoPage: undefined,
                };
            default:
                return {
                    type: 'page',
                    key: "".concat(type, "_").concat(page),
                    label: page.toString(),
                    a11yLabel: type === 'active' && activeLabel
                        ? { label: activeLabel, mode: 'additional' }
                        : undefined,
                    gotoPage: page,
                    active: type === 'active',
                };
        }
    });
}
exports.compositionToPaginationItems = compositionToPaginationItems;
